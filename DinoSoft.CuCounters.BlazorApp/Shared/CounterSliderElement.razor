@using DinoSoft.CuCounters.BlazorApp.Infrastructure.Constants
@using DinoSoft.CuCounters.BlazorApp.Infrastructure.Helpers
@using DinoSoft.CuCounters.BlazorApp.Pages
@using DinoSoft.CuCounters.Common.Extensions
@using DinoSoft.CuCounters.Domain.Contracts.Model
@inject NavigationService navigationService

<div class="container list-group-item cuc-counter-bg cuc-text shadow" style="padding-top:0px; padding-bottom:0px;">
    <div class="row justify-content-between" style="height:92px; padding-right:0px;" >


        <div class="col" style="padding-top:3px; padding-bottom:3px;" @onclick="NavigateToCounterComponent">
            <div class="row justify-content-between" >
               <div class="col-auto justify-content-start text-left">
                    <div class="cuc-icon-circle">
                        <i style="font-size: 30px; color: @Counter.IconColor" class="@Counter.IconName "/>
                    </div>
                </div>
                <div class="col text-right align-middle">
                    <div>
                        @for (var i = values.Length; i < 6; i++)
                        {
                            <div class="btn btn-sm text-black align-middle" style="margin: 10px 1px 1px 1px; background:#dce3e6;">0</div>
                        }

                        @foreach (var value in values)
                        {
                            <div class="btn btn-sm text-black align-middle" style="margin: 10px 1px 1px 1px; background:#dce3e6;">@value</div>
                        }
                    </div>
                    <span class="badge bg-success ">+1</span>
                </div>
            </div>
            <div class="row justify-content-between" style="height:10px">
                <div class="col-auto text-left">
                    <h6 style="margin-top: 2px" class="cuc-text"> @Counter.Name</h6>
                </div>
                <div class="col-auto justify-content-end text-right cuc-text-sub">
                    <h6>@updatedDate</h6>
                </div>
            </div>
        </div>

        <div class="col-auto d-flex justify-content-between">
            <div class="row d-flex justify-content-between">
                <div class="button-up d-flex col-auto text-center cuc-counter-bg" style="text-shadow: 0px 0px 10px lime;" @onclick="@(e => Counter.AddValue(1))">
                    <i class="@BootStrapIconHelper.GetIcon(BootStrapIconsTypes.ArrowUp) align-self-center" style="color: darkgray; font-size: 30px;"/>
                </div>
                <div class="button-down d-flex col-auto text-center cuc-counter-bg" style="text-shadow: 0px 0px 10px red;" @onclick="@(e => Counter.AddValue(-1))">
                     <i class="@BootStrapIconHelper.GetIcon(BootStrapIconsTypes.ArrowDown) align-self-center" style="color: darkgray; font-size: 30px;"/>
                </div>
            </div>
        </div>
    </div>


</div>

@code {
    // Demonstrates how a parent component can supply parameters
    [Parameter]
    public ICounter Counter { get; set; }

    private int[] values => Counter.Value.ToArray();

    private string updatedDate => 
        Counter.LastUpdated.HasValue ? 
        (Counter.LastUpdated.Value.Date == DateTime.Now.Date ? Counter.LastUpdated.Value.ToString("hh:mm") : Counter.LastUpdated.Value.ToString("g"))
        : string.Empty;

    private RefreshToken refreshToken = new RefreshToken();

    protected override async Task OnInitializedAsync()
    {
        refreshToken.Add(StateHasChanged);
    }

    private void NavigateToCounterComponent()
    {
        navigationService.NavigateTo(Links.CounterPage(Counter.CounterGroupId, Counter.Id));
    }
}
