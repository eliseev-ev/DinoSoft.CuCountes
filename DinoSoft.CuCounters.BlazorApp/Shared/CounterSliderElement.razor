@using DinoSoft.CuCounters.BlazorApp.Infrastructure.Constants
@using DinoSoft.CuCounters.BlazorApp.Infrastructure.Helpers
@using DinoSoft.CuCounters.BlazorApp.Pages
@using DinoSoft.CuCounters.Common.Extensions
@using DinoSoft.CuCounters.Domain.Model
@inject NavigationManager NavigationManager

<div class="container list-group-item cuc-bg cuc-text shadow" style="padding-top:0px; padding-bottom:0px;">
    <div class="row justify-content-between" style="height:90px; padding-right:0px;" >

        <div class="col-auto d-flex justify-content-between">
            <div class="row d-flex justify-content-between">
                <div class="button-up d-flex col-auto text-center cuc-button-add text-success" style="background: #171717; box-shadow: inset #145c00a6 0px 0px 3px 2px;" @onclick="@(e => Counter.AddValue(1))">
                    <i class="@BootStrapIconHelper.GetIcon(BootStrapIconsTypes.ArrowUp) align-self-center" style="color: darkgray; font-size: 30px;"/>
                </div>
            </div>
        </div>

        <div class="col-auto" style="padding-top:3px; padding-bottom:3px;" @onclick="NavigateToCounterComponent">
            <div class="row justify-content-between" >
               <div class="col-2 justify-content-start text-left">
                   <i style="font-size: 40px; color: @Counter.IconColor" class="@Counter.IconName"/>
               </div>
               <div class="col-auto text-right align-middle">
                   <div>
                       @for (var i = values.Length; i < 6; i++)
                       {
                           <div class="btn btn-sm btn-light text-black align-middle" style="margin: 10px 1px 1px 1px">0</div>
                       }

                       @foreach (var value in values)
                       {
                           <div class="btn btn-sm btn-light text-black align-middle" style="margin: 10px 1px 1px 1px">@value</div>
                       }
                   </div>
                   <span class="badge bg-success ">+1</span>
               </div>
            </div>
            <div class="row justify-content-between" style="height:10px">
                <div class="col-auto text-left">
                    <h6>@Counter.Name</h6>
                </div>
                <div class="col-auto justify-content-end text-right cuc-text-sub">
                    <h6>@updatedDate</h6>
                </div>
            </div>
        </div>

        <div class="col-auto d-flex justify-content-between">
            <div class="row d-flex justify-content-between">
                <div class="button-down d-flex col-auto text-center cuc-button-add text-success" style="background: #171717; box-shadow: inset #5c0000a6 0px 0px 3px 2px;" @onclick="@(e => Counter.AddValue(-1))">
                     <i class="@BootStrapIconHelper.GetIcon(BootStrapIconsTypes.ArrowDown) align-self-center" style="color: darkgray; font-size: 30px;"/>
                </div>
            </div>
        </div>
    </div>


</div>

@code {
    // Demonstrates how a parent component can supply parameters
    [Parameter]
    public Counter Counter { get; set; }

    private int[] values => Counter.Value.ToArray();

    private string updatedDate => 
        Counter.LastUpdated.HasValue ? 
        (Counter.LastUpdated.Value.Date == DateTime.Now.Date ? Counter.LastUpdated.Value.ToString("hh:mm") : Counter.LastUpdated.Value.ToString("g"))
        : string.Empty;

    private RefreshToken refreshToken = new RefreshToken();

    protected override async Task OnInitializedAsync()
    {
        refreshToken.Add(StateHasChanged);
    }

    private void NavigateToCounterComponent()
    {
        NavigationManager.NavigateTo(Links.CounterPage(Counter.CounterGroupId, Counter.Id));
    }
}
