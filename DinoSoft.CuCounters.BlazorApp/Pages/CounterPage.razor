@page "/counter-groups/{CounterGroupId:guid}/counters/{Id:guid}"
@using DinoSoft.CuCounters.Common.Extensions
@using DinoSoft.CuCounters.Domain.Model
@using DinoSoft.CuCounters.Domain.Infrastructure
@inject CounterGroupManager counterGroupManager
@inject NavigationManager NavigationManager

<LayoutView>
     <div class="container">
        <div class="row justify-content-between text-warning border-bottom border-warning header-bg" style="height:60px; padding:20px;">
           <div class="col-auto text-left">
              <h6 @onclick="NavigateBack">Назад</h6>
           </div>
           <div class="col-auto text-left">
              <h6 @onclick="NavigateEdit">Редактировать</h6>
           </div>
        </div>
     </div>
 
    <div class="container">
        <div class="content text-white">
            <div class="col-auto text-left">
                <h6>@counter.Name</h6>
            </div>
            <div class="col-auto justify-content-end text-right cuc-text-sub">
               @* <h6>@updatedDate</h6>*@
            </div>
            <div class="row justify-content-between" >
               <div class="col-2 justify-content-start text-left">
                   <i style="font-size: 40px; color: @counter.IconColor" class="@counter.IconName"/>
               </div>
               <div class="col-auto text-right align-middle">
                   <div>
                       @for (var i = values.Length; i < 6; i++)
                       {
                           <div class="btn btn-sm btn-light text-black align-middle" style="margin: 10px 1px 1px 1px">0</div>
                       }

                       @foreach (var value in values)
                       {
                           <div class="btn btn-sm btn-light text-black align-middle" style="margin: 10px 1px 1px 1px">@value</div>
                       }
                   </div>
                   <span class="badge bg-success ">+1</span>
               </div>
            </div>
        </div>
    </div>
</LayoutView>



@code {

    [Parameter]
    public  Guid CounterGroupId { get; set; }

    [Parameter]
    public  Guid Id { get; set; }

    public Counter counter { get; set; }

    private int[] values => counter.Value.ToArray();

    protected override async Task OnInitializedAsync()
    {
        counter = (await counterGroupManager.GetCounterGroups()).First(x => x.Id == CounterGroupId).Counters.First(x => x.Id == Id);
    }

    private void NavigateBack()
    {
        NavigationManager.NavigateTo(Links.CounterGroupPage(CounterGroupId));
    }

    private void NavigateEdit()
    {
         NavigationManager.NavigateTo(Links.CounterEditPage(CounterGroupId, Id));
    }
}