@page "/counter-groups/{CounterGroupId:guid}/counters/{Id:guid}/edit"
@using DinoSoft.CuCounters.Domain.Model
@using DinoSoft.CuCounters.Domain.Infrastructure
@inject CounterGroupManager counterGroupManager
@inject NavigationManager NavigationManager

<LayoutView>
     <div class="d-flex text-warning border-bottom border-warning header-bg" style="height:60px; padding:20px;">
         <div class="row justify-content-between">
            <h6 class="col col-auto text-left" @onclick="NavigateBack">Отмена</h6>
            <h6 class="col col-auto text-right" @onclick="HandleValidSubmit">Сохранить</h6>
         </div>
     </div>

    <div class="content text-white">
        <h3>Редактировать</h3>

        <EditForm Model="@counter" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label for="exampleFormControlInput1" style="margin:10px;" class="form-label">Имя</label>
                <InputText id="name" class="form-control" @bind-Value="counter.Name" />
            </div>
            <div class="mb-3">
                <label for="exampleFormControlInput1" style="margin:10px;" class="form-label">Значение</label>
                <InputNumber id="name" class="form-control" @bind-Value="counter.Value" />
            </div>
            <div class="mb-3">
                <label for="exampleFormControlInput1" style="margin:10px;" class="form-label">Иконка</label>
                <InputText id="name" class="form-control" @bind-Value="counter.IconName" />
            </div>
           @* <button type="submit" class="btn btn-primary mb-3">Confirm identity</button>*@
        </EditForm>
    </div>
</LayoutView>



@code {

    [Parameter]
    public  Guid CounterGroupId { get; set; }

    [Parameter]
    public  Guid Id { get; set; }

    public Counter counter { get; set; }

    protected override async Task OnInitializedAsync()
    {
        counter = (await counterGroupManager.GetCounterGroups()).First(x => x.Id == CounterGroupId).Counters.First(x => x.Id == Id);
    }

    private void NavigateBack()
    {
        NavigationManager.NavigateTo(Links.CounterPage(CounterGroupId, Id));
    }

    private void HandleValidSubmit()
    {
        //Logger.LogInformation("HandleValidSubmit called");
        //save?
        NavigateBack();
        // Process the valid form
    }
}